import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { AnimationInterface } from './AnimationInterface';
/**
 * Represent the props of the [KendoVue Fade Animation component]({% slug animationtypes_animation %}#toc-fade).
 *
 * @example
 * ```html-preview
 *
 * ```
 */
export interface FadeProps extends AnimationInterface {
    /**
     * After the element reaches its exit state, it is no longer available
     * in the DOM. If a DOM operation is required, access it trough the `childFactory` function.
     */
    childFactory?: any;
    /**
     * Specifies CSS class names which are set to the Animation.
     */
    className?: string;
    /**
     * Specifies the node type of the parent Animation. Defaults to `div`.
     */
    component?: string;
    /**
     * Specifies the id of the Animation.
     */
    id?: string;
    /**
     * Specifies the tag.
     */
    tag?: String;
}
/**
 * @hidden
 */
declare let FadeVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<{}>, {}, RecordPropsDefinition<FadeProps>>;
/**
 * @hidden
 */
declare const Fade: DefineComponent<FadeProps, any, {}, {}, {}, {}, {}, {}, string, FadeProps, FadeProps, {}>;
export { Fade, FadeVue2 };
