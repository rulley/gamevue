// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var TOOLTIP_MARKER_CLASS = 'k-chart-shared-tooltip-marker';
/**
 * @hidden
 */
var SharedTooltipContentVue2 = {
  name: 'KendoSharedTooltipPopup',
  props: {
    categoryText: String,
    colorMarker: {
      type: Boolean,
      default: undefined
    },
    colspan: Number,
    nameColumn: {
      type: Boolean,
      default: undefined
    },
    points: Array
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
      categoryText = _a.categoryText,
      colorMarker = _a.colorMarker,
      colspan = _a.colspan,
      nameColumn = _a.nameColumn,
      points = _a.points;
    var pointsMap = function pointsMap(point, idx) {
      var defaultTD = h('span', {
        domProps: {
          innerHTML: point.formattedValue
        },
        innerHTML: point.formattedValue
      });
      return h("tr", {
        key: idx
      }, [colorMarker && h("td", [h("span", {
        "class": TOOLTIP_MARKER_CLASS,
        style: {
          backgroundColor: point.series.color
        }
      })]), nameColumn && h("td", [point.series.name]), defaultTD]);
    };
    return h("table", [h("thead", [h("tr", [h("th", {
      colspan: colspan,
      attrs: this.v3 ? undefined : {
        colspan: colspan
      }
    }, [categoryText])])]), h("tbody", [points.map(pointsMap.bind(this), this)])]);
  }
};
/**
 * @hidden
 */
var SharedTooltipContent = SharedTooltipContentVue2;
export { SharedTooltipContent, SharedTooltipContentVue2 };