{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport simplebar from \"simplebar-vue\";\nimport useVuelidate from \"@vuelidate/core\";\n\n/**\r\n * Chat component\r\n */\nexport default {\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  components: {\n    simplebar: simplebar\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Chat\"\n    },\n    chatWindowHeight: {\n      type: String,\n      default: \"367px\"\n    },\n    chatMessages: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      chats: {\n        message: \"\"\n      },\n      submitform: false\n    };\n  },\n  methods: {\n    /**\r\n     * Chat form submit\r\n     */\n    saveMessage: function saveMessage() {\n      this.submitform = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        var id = this.chatMessages.length;\n        var message = this.chats.message;\n        var currentDate = new Date();\n\n        // Message Push in Chat\n        this.chatMessages.push({\n          image: require(\"@/assets/images/users/user-3.jpg\"),\n          id: id + 1,\n          name: \"Smith\",\n          message: message,\n          odd: true,\n          time: currentDate.getHours() + \":\" + currentDate.getMinutes()\n        });\n      }\n      this.submitform = false;\n      this.chats = {};\n    }\n  }\n};","map":{"version":3,"names":["simplebar","useVuelidate","setup","v$","components","props","title","type","String","default","chatWindowHeight","chatMessages","Array","_default","data","chats","message","submitform","methods","saveMessage","$touch","$invalid","id","length","currentDate","Date","push","image","require","name","odd","time","getHours","getMinutes"],"sources":["/Users/michaelrellaford/Documents/velgame/Starterkit/src/components/widgets/chat.vue"],"sourcesContent":["<script>\r\nimport simplebar from \"simplebar-vue\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\n\r\n/**\r\n * Chat component\r\n */\r\nexport default {\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  components: { simplebar },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"Chat\",\r\n    },\r\n    chatWindowHeight: {\r\n      type: String,\r\n      default: \"367px\",\r\n    },\r\n    chatMessages: {\r\n      type: Array,\r\n      default: function () {\r\n        return [];\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chats: {\r\n        message: \"\",\r\n      },\r\n      submitform: false,\r\n    };\r\n  },\r\n  methods: {\r\n    /**\r\n     * Chat form submit\r\n     */\r\n    saveMessage() {\r\n      this.submitform = true;\r\n      // stop here if form is invalid\r\n      this.v$.$touch();\r\n\r\n      if (this.v$.$invalid) {\r\n        return;\r\n      } else {\r\n        var id = this.chatMessages.length;\r\n        const message = this.chats.message;\r\n        const currentDate = new Date();\r\n\r\n        // Message Push in Chat\r\n        this.chatMessages.push({\r\n          image: require(\"@/assets/images/users/user-3.jpg\"),\r\n          id: id + 1,\r\n          name: \"Smith\",\r\n          message,\r\n          odd: true,\r\n          time: currentDate.getHours() + \":\" + currentDate.getMinutes(),\r\n        });\r\n      }\r\n      this.submitform = false;\r\n      this.chats = {};\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <BCard no-body>\r\n    <BCardBody>\r\n      <BCardTitle class=\"mb-4\">{{ title }}</BCardTitle>\r\n      <div class=\"chat-conversation\">\r\n        <ul class=\"conversation-list\">\r\n          <simplebar :style=\"`max-height:${chatWindowHeight}`\">\r\n            <li v-for=\"chat in chatMessages\" :key=\"chat.id\" :class=\"{ odd: chat.odd === true }\" class=\"clearfix\">\r\n              <div class=\"chat-avatar\">\r\n                <img :src=\"`${chat.image}`\" alt=\"male\" class=\"avatar-xs rounded-circle\" />\r\n                <span class=\"time\">{{ chat.time }}</span>\r\n              </div>\r\n              <div class=\"conversation-text\">\r\n                <div class=\"ctext-wrap\">\r\n                  <span class=\"user-name\">{{ chat.name }}</span>\r\n                  <p>{{ chat.message }}</p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </simplebar>\r\n        </ul>\r\n      </div>\r\n\r\n      <BForm @submit.prevent=\"saveMessage\">\r\n        <BRow class=\"pt-3\">\r\n          <BCol sm=\"9\" col=\"8\" class=\"chat-inputbar\">\r\n            <input id=\"message\" v-model=\"chats.message\" type=\"text\" class=\"form-control chat-input\" placeholder=\"Enter your text\" name=\"message\" :class=\"{ 'is-invalid': submitform && v$.chats.message.$error }\" />\r\n            <div v-if=\"submitform && !v$.chats.message.required\" class=\"invalid-feedback\">\r\n              This value is required.\r\n            </div>\r\n          </BCol>\r\n\r\n          <BCol sm=\"3\" cols=\"4\" class=\"chat-send\">\r\n            <div class=\"d-grid\">\r\n              <BButton variant=\"success\" type=\"submit\">Send</BButton>\r\n            </div>\r\n          </BCol>\r\n        </BRow>\r\n      </BForm>\r\n    </BCardBody>\r\n  </BCard>\r\n</template>\r\n"],"mappings":";AACA,OAAOA,SAAQ,MAAO,eAAe;AACrC,OAAOC,YAAW,MAAO,iBAAiB;;AAE1C;;;AAGA,eAAe;EACbC,KAAK,WAAAA,MAAA,EAAG;IACN,OAAO;MAAEC,EAAE,EAAEF,YAAY,CAAC;IAAE,CAAC;EAC/B,CAAC;EACDG,UAAU,EAAE;IAAEJ,SAAQ,EAARA;EAAU,CAAC;EACzBK,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,gBAAgB,EAAE;MAChBH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDE,YAAY,EAAE;MACZJ,IAAI,EAAEK,KAAK;MACXH,OAAO,EAAE,SAAAI,SAAA,EAAY;QACnB,OAAO,EAAE;MACX;IACF;EACF,CAAC;EACDC,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLC,OAAO,EAAE;MACX,CAAC;MACDC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;;;IAGAC,WAAW,WAAAA,YAAA,EAAG;MACZ,IAAI,CAACF,UAAS,GAAI,IAAI;MACtB;MACA,IAAI,CAACd,EAAE,CAACiB,MAAM,CAAC,CAAC;MAEhB,IAAI,IAAI,CAACjB,EAAE,CAACkB,QAAQ,EAAE;QACpB;MACF,OAAO;QACL,IAAIC,EAAC,GAAI,IAAI,CAACX,YAAY,CAACY,MAAM;QACjC,IAAMP,OAAM,GAAI,IAAI,CAACD,KAAK,CAACC,OAAO;QAClC,IAAMQ,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;;QAE9B;QACA,IAAI,CAACd,YAAY,CAACe,IAAI,CAAC;UACrBC,KAAK,EAAEC,OAAO,CAAC,kCAAkC,CAAC;UAClDN,EAAE,EAAEA,EAAC,GAAI,CAAC;UACVO,IAAI,EAAE,OAAO;UACbb,OAAO,EAAPA,OAAO;UACPc,GAAG,EAAE,IAAI;UACTC,IAAI,EAAEP,WAAW,CAACQ,QAAQ,CAAC,IAAI,GAAE,GAAIR,WAAW,CAACS,UAAU,CAAC;QAC9D,CAAC,CAAC;MACJ;MACA,IAAI,CAAChB,UAAS,GAAI,KAAK;MACvB,IAAI,CAACF,KAAI,GAAI,CAAC,CAAC;IACjB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}