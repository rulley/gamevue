'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _kendoBaseComponentsVueWrapper = require('@progress/kendo-base-components-vue-wrapper');

var _DataSourceProps = require('./DataSourceProps');

var _DataSourceProps2 = _interopRequireDefault(_DataSourceProps);

var _Filter = require('./Filter');

var _Filter2 = _interopRequireDefault(_Filter);

var _Group = require('./Group');

var _Group2 = _interopRequireDefault(_Group);

var _Schema = require('./Schema');

var _Schema2 = _interopRequireDefault(_Schema);

var _Sort = require('./Sort');

var _Sort2 = _interopRequireDefault(_Sort);

var _Transport = require('./Transport');

var _Transport2 = _interopRequireDefault(_Transport);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    props: _DataSourceProps2.default,
    mixins: [_kendoBaseComponentsVueWrapper.KendoBaseComponent, _Filter2.default, _Group2.default, _Schema2.default, _Sort2.default, _Transport2.default],
    mounted() {

        this.$watch(() => [this.filter, this.filterValue, this.filterField, this.filterFilters, this.filterLogic, this.filterOperator].join(), () => {
            this.kendoDataSource.filter(this.widgetOptions.filter);
        }, { deep: true });

        this.$watch(() => [this.group, this.groupField, this.groupDir, this.groupAggregates].join(), () => {
            this.kendoDataSource.group(this.widgetOptions.group);
        }, { deep: true });

        this.$watch(() => [this.aggregate, this.aggregateAggregate, this.aggregateField].join(), () => {
            this.kendoDataSource.aggregate(this.widgetOptions.aggregate);
        }, { deep: true });

        this.$watch(() => [this.sort, this.sortDir, this.sortField, this.sortCompare].join(), () => {
            this.kendoDataSource.sort(this.widgetOptions.sort);
        }, { deep: true });

        this.$watch(() => [this.page].join(), () => {
            this.kendoDataSource.page(this.widgetOptions.page);
        }, { deep: true });

        this.$watch(() => [this.pageSize].join(), () => {
            this.kendoDataSource.pageSize(this.widgetOptions.pageSize);
        }, { deep: true });

        this.$watch(() => [this.data].join(), () => {
            this.kendoDataSource.data(this.widgetOptions.data);
        }, { deep: true });
    }
};