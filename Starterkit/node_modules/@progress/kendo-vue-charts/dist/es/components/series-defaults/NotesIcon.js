// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { Configuration } from './../base/ConfigurationComponent';
import { getDefaultSlots } from '@progress/kendo-vue-common';
import { removeUndefinedProps } from '../../utils/main';
/**
 * @hidden
 */
var ChartSeriesDefaultsNotesIconVue2 = {
  name: 'KendoChartSeriesDefaultsNotesIcon',
  props: {
    background: String,
    border: {
      type: Object,
      default: function _default() {
        return undefined;
      }
    },
    size: Number,
    type: {
      type: String,
      default: function _default() {
        return undefined;
      },
      validator: function validator(value) {
        return ['square', 'circle', 'triangle', 'cross'].includes(value);
      }
    },
    visible: {
      type: Boolean,
      default: undefined
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlots = getDefaultSlots(this);
    var config = removeUndefinedProps(this.$props);
    return this.v3 ? h(Configuration, {
      config: config,
      chartKey: 'icon'
    }, function () {
      return defaultSlots;
    }) : h(Configuration, {
      props: {
        config: config,
        chartKey: 'icon'
      }
    }, [defaultSlots]);
  }
};
/**
 * @hidden
 */
var ChartSeriesDefaultsNotesIcon = ChartSeriesDefaultsNotesIconVue2;
export { ChartSeriesDefaultsNotesIcon, ChartSeriesDefaultsNotesIconVue2 };