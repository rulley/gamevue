{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nimport { authMethods, authFackMethods, notificationMethods } from \"@/state/helpers\";\nimport { required, email } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\n\n/**\r\n * Login component\r\n */\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  components: {},\n  validations: {\n    email: {\n      required,\n      email\n    },\n    password: {\n      required\n    }\n  },\n  data() {\n    return {\n      email: \"admin@themesbrand.com\",\n      password: \"123456\",\n      submitted: false,\n      authError: null,\n      tryingToLogIn: false,\n      isAuthError: false\n    };\n  },\n  computed: {\n    ...mapState(\"authfack\", [\"status\"]),\n    notification() {\n      return this.$store ? this.$store.state.notification : null;\n    }\n  },\n  methods: {\n    ...authMethods,\n    ...authFackMethods,\n    ...notificationMethods,\n    // Try to log the user in with the username\n    // and password they provided.\n    tryToLogIn() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        if (process.env.VUE_APP_DEFAULT_AUTH === \"firebase\") {\n          this.tryingToLogIn = true;\n          // Reset the authError if it existed.\n          this.authError = null;\n          return this.logIn({\n            email: this.email,\n            password: this.password\n          })\n          // eslint-disable-next-line no-unused-vars\n          .then(token => {\n            this.tryingToLogIn = false;\n            this.isAuthError = false;\n            // Redirect to the originally requested page, or to the home page\n            this.$router.push(this.$route.query.redirectFrom || {\n              name: \"home\"\n            });\n          }).catch(error => {\n            this.tryingToLogIn = false;\n            this.authError = error ? error : \"\";\n            this.isAuthError = true;\n          });\n        } else if (process.env.VUE_APP_DEFAULT_AUTH === \"fakebackend\") {\n          const {\n            email,\n            password\n          } = this;\n          if (email && password) {\n            this.login({\n              email,\n              password\n            });\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","authMethods","authFackMethods","notificationMethods","required","email","useVuelidate","setup","v$","components","validations","password","data","submitted","authError","tryingToLogIn","isAuthError","computed","notification","$store","state","methods","tryToLogIn","$touch","$invalid","process","env","VUE_APP_DEFAULT_AUTH","logIn","then","token","$router","push","$route","query","redirectFrom","name","catch","error","login"],"sources":["/Users/michaelrellaford/Documents/velgame/Starterkit/src/router/views/account/login.vue"],"sourcesContent":["<script>\r\nimport { mapState } from \"vuex\";\r\n\r\nimport {\r\n    authMethods,\r\n    authFackMethods,\r\n    notificationMethods,\r\n} from \"@/state/helpers\";\r\nimport { required, email } from \"@vuelidate/validators\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\n\r\n/**\r\n * Login component\r\n */\r\nexport default {\r\n    setup() {\r\n        return { v$: useVuelidate() };\r\n    },\r\n    components: {},\r\n    validations: {\r\n        email: {\r\n            required,\r\n            email,\r\n        },\r\n        password: {\r\n            required,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            email: \"admin@themesbrand.com\",\r\n            password: \"123456\",\r\n            submitted: false,\r\n            authError: null,\r\n            tryingToLogIn: false,\r\n            isAuthError: false,\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapState(\"authfack\", [\"status\"]),\r\n        notification() {\r\n            return this.$store ? this.$store.state.notification : null;\r\n        },\r\n    },\r\n    methods: {\r\n        ...authMethods,\r\n        ...authFackMethods,\r\n        ...notificationMethods,\r\n        // Try to log the user in with the username\r\n        // and password they provided.\r\n        tryToLogIn() {\r\n            this.submitted = true;\r\n            // stop here if form is invalid\r\n            this.v$.$touch();\r\n            if (this.v$.$invalid) {\r\n                return;\r\n            } else {\r\n                if (process.env.VUE_APP_DEFAULT_AUTH === \"firebase\") {\r\n                    this.tryingToLogIn = true;\r\n                    // Reset the authError if it existed.\r\n                    this.authError = null;\r\n                    return (\r\n                        this.logIn({\r\n                            email: this.email,\r\n                            password: this.password,\r\n                        })\r\n                            // eslint-disable-next-line no-unused-vars\r\n                            .then((token) => {\r\n                                this.tryingToLogIn = false;\r\n                                this.isAuthError = false;\r\n                                // Redirect to the originally requested page, or to the home page\r\n                                this.$router.push(\r\n                                    this.$route.query.redirectFrom || { name: \"home\" }\r\n                                );\r\n                            })\r\n                            .catch((error) => {\r\n                                this.tryingToLogIn = false;\r\n                                this.authError = error ? error : \"\";\r\n                                this.isAuthError = true;\r\n                            })\r\n                    );\r\n                } else if (process.env.VUE_APP_DEFAULT_AUTH === \"fakebackend\") {\r\n                    const { email, password } = this;\r\n                    if (email && password) {\r\n                        this.login({\r\n                            email,\r\n                            password,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<template>\r\n    <div class=\"account-pages my-5 pt-5\">\r\n        <BContainer>\r\n            <BRow class=\"justify-content-center\">\r\n                <BCol md=\"8\" lg=\"6\" xl=\"4\">\r\n                    <BCard no-body class=\"overflow-hidden\">\r\n                        <div class=\"bg-primary\">\r\n                            <div class=\"text-primary text-center p-4\">\r\n                                <h5 class=\"text-white font-size-20\">Welcome Back !</h5>\r\n                                <p class=\"text-white-50\">Sign in to continue to Veltrix.</p>\r\n                                <router-link to=\"/\" class=\"logo logo-admin\">\r\n                                    <img src=\"@/assets/images/logo-sm.png\" height=\"24\" alt=\"logo\" />\r\n                                </router-link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <BCardBody class=\"p-4\">\r\n                            <div class=\"p-3\">\r\n                                <BAlert v-model=\"isAuthError\" variant=\"danger\" class=\"mt-3\" dismissible>{{ authError }}</BAlert>\r\n                                <div v-if=\"notification.message\" :class=\"'alert ' + notification.type\">\r\n                                    {{ notification.message }}\r\n                                </div>\r\n\r\n                                <BForm @submit.prevent=\"tryToLogIn\" class=\"form-horizontal mt-4\">\r\n                                    <BFormGroup id=\"input-group-1\" label=\"Email\" label-for=\"input-1\" class=\"mb-3\" label-class=\"form-label\">\r\n                                        <BFormInput id=\"input-1\" :class=\"{ 'is-invalid': submitted && v$.email.$error }\" v-model=\"email\" type=\"email\" placeholder=\"Enter email\"></BFormInput>\r\n                                        <div v-if=\"submitted && v$.email.$error\" class=\"invalid-feedback\">\r\n                                            <span v-if=\"!v$.email.required\">Email is required.</span>\r\n                                            <span v-if=\"!v$.email.email\">Please enter valid email.</span>\r\n                                        </div>\r\n                                    </BFormGroup>\r\n\r\n                                    <BFormGroup id=\"input-group-2\" label=\"Password\" label-for=\"input-2\" class=\"mb-3\" label-class=\"form-label\">\r\n                                        <BFormInput id=\"input-2\" v-model=\"password\" type=\"password\" placeholder=\"Enter password\" :class=\"{ 'is-invalid': submitted && v$.password.$error }\"></BFormInput>\r\n                                        <div v-if=\"submitted && !v$.password.required\" class=\"invalid-feedback\">\r\n                                            Password is required.\r\n                                        </div>\r\n                                    </BFormGroup>\r\n\r\n                                    <div class=\"form-group row\">\r\n                                        <BCol sm=\"6\">\r\n                                            <div class=\"form-check\">\r\n                                                <input type=\"checkbox\" class=\"form-check-input\" id=\"customControlInline\" />\r\n                                                <label class=\"form-check-label\" for=\"customControlInline\">Remember me</label>\r\n                                            </div>\r\n                                        </BCol>\r\n                                        <BCol sm=\"6\" class=\"text-end\">\r\n                                            <BButton type=\"submit\" variant=\"primary\" class=\"w-md\">Log In</BButton>\r\n                                        </BCol>\r\n                                    </div>\r\n\r\n                                    <BRow class=\"mt-2 mb-0\">\r\n                                        <BCol cols=\"12\" class=\"mt-4\">\r\n                                            <router-link to=\"/forgot-password\">\r\n                                                <i class=\"mdi mdi-lock\"></i> Forgot your password?\r\n                                            </router-link>\r\n                                        </BCol>\r\n                                    </BRow>\r\n                                </BForm>\r\n                            </div>\r\n                        </BCardBody>\r\n                    </BCard>     \r\n                                                                                                                                                                                                                   \r\n                    <div class=\"mt-5 text-center\">\r\n                        <p>\r\n                            Don't have an account ?\r\n                            <router-link to=\"/register\" class=\"fw-medium text-primary\">Signup now</router-link>\r\n                        </p>\r\n                        <p class=\"mb-0\">\r\n                            © {{ new Date().getFullYear() }} Veltrix. Crafted with\r\n\r\n                            <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand\r\n                        </p>\r\n                    </div>\r\n                </BCol>\r\n            </BRow>\r\n        </BContainer>\r\n    </div>\r\n</template>\r\n\r\n<style lang=\"scss\" module></style>\r\n"],"mappings":";AACA,SAASA,QAAO,QAAS,MAAM;AAE/B,SACIC,WAAW,EACXC,eAAe,EACfC,mBAAmB,QAChB,iBAAiB;AACxB,SAASC,QAAQ,EAAEC,KAAI,QAAS,uBAAuB;AACvD,OAAOC,YAAW,MAAO,iBAAiB;;AAE1C;;;AAGA,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,OAAO;MAAEC,EAAE,EAAEF,YAAY,CAAC;IAAE,CAAC;EACjC,CAAC;EACDG,UAAU,EAAE,CAAC,CAAC;EACdC,WAAW,EAAE;IACTL,KAAK,EAAE;MACHD,QAAQ;MACRC;IACJ,CAAC;IACDM,QAAQ,EAAE;MACNP;IACJ;EACJ,CAAC;EACDQ,IAAIA,CAAA,EAAG;IACH,OAAO;MACHP,KAAK,EAAE,uBAAuB;MAC9BM,QAAQ,EAAE,QAAQ;MAClBE,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGjB,QAAQ,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;IACnCkB,YAAYA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAK,GAAI,IAAI,CAACA,MAAM,CAACC,KAAK,CAACF,YAAW,GAAI,IAAI;IAC9D;EACJ,CAAC;EACDG,OAAO,EAAE;IACL,GAAGpB,WAAW;IACd,GAAGC,eAAe;IAClB,GAAGC,mBAAmB;IACtB;IACA;IACAmB,UAAUA,CAAA,EAAG;MACT,IAAI,CAACT,SAAQ,GAAI,IAAI;MACrB;MACA,IAAI,CAACL,EAAE,CAACe,MAAM,CAAC,CAAC;MAChB,IAAI,IAAI,CAACf,EAAE,CAACgB,QAAQ,EAAE;QAClB;MACJ,OAAO;QACH,IAAIC,OAAO,CAACC,GAAG,CAACC,oBAAmB,KAAM,UAAU,EAAE;UACjD,IAAI,CAACZ,aAAY,GAAI,IAAI;UACzB;UACA,IAAI,CAACD,SAAQ,GAAI,IAAI;UACrB,OACI,IAAI,CAACc,KAAK,CAAC;YACPvB,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBM,QAAQ,EAAE,IAAI,CAACA;UACnB,CAAC;UACG;UAAA,CACCkB,IAAI,CAAEC,KAAK,IAAK;YACb,IAAI,CAACf,aAAY,GAAI,KAAK;YAC1B,IAAI,CAACC,WAAU,GAAI,KAAK;YACxB;YACA,IAAI,CAACe,OAAO,CAACC,IAAI,CACb,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,YAAW,IAAK;cAAEC,IAAI,EAAE;YAAO,CACrD,CAAC;UACL,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;YACd,IAAI,CAACvB,aAAY,GAAI,KAAK;YAC1B,IAAI,CAACD,SAAQ,GAAIwB,KAAI,GAAIA,KAAI,GAAI,EAAE;YACnC,IAAI,CAACtB,WAAU,GAAI,IAAI;UAC3B,CAAC;QAEb,OAAO,IAAIS,OAAO,CAACC,GAAG,CAACC,oBAAmB,KAAM,aAAa,EAAE;UAC3D,MAAM;YAAEtB,KAAK;YAAEM;UAAS,IAAI,IAAI;UAChC,IAAIN,KAAI,IAAKM,QAAQ,EAAE;YACnB,IAAI,CAAC4B,KAAK,CAAC;cACPlC,KAAK;cACLM;YACJ,CAAC,CAAC;UACN;QACJ;MACJ;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}