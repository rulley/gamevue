{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport { Grid, GridColumn } from '@progress/kendo-grid-vue-wrapper';\nimport { KendoDataSource } from '@progress/kendo-datasource-vue-wrapper';\nimport kendo from '@progress/kendo-ui';\nexport default {\n  components: {\n    'kendo-grid': Grid,\n    'kendo-grid-column': GridColumn,\n    'kendo-datasource': KendoDataSource\n  },\n  data: function data() {\n    return {\n      schemaModelFields: {\n        productID: {\n          type: 'number',\n          editable: false\n        },\n        productName: {\n          validation: {\n            required: true\n          }\n        },\n        unitPrice: {\n          type: 'number',\n          validation: {\n            required: true,\n            min: 1\n          }\n        },\n        unitsInStock: {\n          type: 'number',\n          validation: {\n            min: 0,\n            required: true\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    readgridData: function readgridData(e) {\n      //e.success({ProductName: \"Chai\"})\n      fetch('https://demos.telerik.com/kendo-ui/service/Products', {\n        mode: 'cors',\n        method: 'get',\n        headers: {\n          'Accept': 'application/vnd.api+json',\n          'Content-type': 'application/vnd.api+json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return response;\n      }).catch(function (error) {\n        console.log('Error on Authentication' + error);\n      });\n    },\n    parameterMap: function parameterMap(options, operation) {\n      if (operation !== 'read' && options.models) {\n        return {\n          models: kendo.stringify(options.models)\n        };\n      }\n    }\n  }\n};","map":{"version":3,"names":["Grid","GridColumn","KendoDataSource","kendo","components","data","schemaModelFields","productID","type","editable","productName","validation","required","unitPrice","min","unitsInStock","methods","readgridData","e","fetch","mode","method","headers","then","response","json","catch","error","console","log","parameterMap","options","operation","models","stringify"],"sources":["/Users/michaelrellaford/Documents/velgame/Starterkit/src/components/widgets/datagrid.vue"],"sourcesContent":["<style lang=\"css\">\r\n@import 'https://kendo.cdn.telerik.com/themes/7.2.0/default/default-ocean-blue.css';\r\n@import 'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css';\r\n</style>\r\n<script>\r\nimport { Grid, GridColumn } from '@progress/kendo-grid-vue-wrapper';\r\nimport { KendoDataSource } from '@progress/kendo-datasource-vue-wrapper';\r\nimport kendo from '@progress/kendo-ui';\r\n\r\nexport default {\r\n    components: {\r\n        'kendo-grid': Grid,\r\n        'kendo-grid-column': GridColumn,\r\n        'kendo-datasource': KendoDataSource\r\n    },\r\n   data: function () {\r\n        return {\r\n            schemaModelFields: {\r\n                productID: { type: 'number', editable: false },\r\n                productName: { validation: { required: true } },\r\n                unitPrice: { type: 'number', validation: { required: true, min: 1 } },\r\n                unitsInStock: { type: 'number', validation: { min: 0, required: true } }\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        readgridData: function(e) {\r\n            //e.success({ProductName: \"Chai\"})\r\n            fetch('https://demos.telerik.com/kendo-ui/service/Products', {\r\n                mode:  'cors', \r\n                method: 'get',\r\n                headers: {\r\n                    'Accept': 'application/vnd.api+json',\r\n                    'Content-type': 'application/vnd.api+json',\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then(data => response)\r\n                .catch(function (error) {\r\n                    console.log('Error on Authentication' + error);\r\n                });\r\n        },\r\n        parameterMap: function(options, operation) {\r\n            if (operation !== 'read' && options.models) {\r\n                return { models: kendo.stringify(options.models) };\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n<Layout>\r\n    <kendo-datasource ref=\"datasource1\"\r\n                        :transport-read=\"readgridData\"\r\n                        :transport-update-url=\"'https://demos.telerik.com/kendo-ui/service/Products/Update'\"\r\n                        :transport-update-data-type=\"'jsonp'\"\r\n                        :transport-destroy-url=\"'https://demos.telerik.com/kendo-ui/service/Products/Destroy'\"\r\n                        :transport-destroy-data-type=\"'jsonp'\"\r\n                        :transport-create-url=\"'https://demos.telerik.com/kendo-ui/service/Products/Create'\"\r\n                        :transport-create-data-type=\"'jsonp'\"\r\n                        :transport-parameter-map=\"parameterMap\"\r\n                        :schema-model-id=\"'ProductID'\"\r\n                        :schema-model-fields=\"schemaModelFields\"\r\n                        :batch='true'\r\n                        :page-size='20'>\r\n    </kendo-datasource>\r\n\r\n    <kendo-grid :height=\"600\"\r\n                :data-source-ref=\"'datasource1'\"\r\n                :pageable='true'\r\n                :editable=\"'inline'\"\r\n                :toolbar=\"['create']\">\r\n        <kendo-grid-column :field=\"'ProductName'\"></kendo-grid-column>\r\n        <kendo-grid-column :field=\"'UnitPrice'\"\r\n                           :title=\"'Unit Price'\"\r\n                           :width=\"120\"\r\n                           :format=\"'{0:c}'\"></kendo-grid-column>\r\n        <kendo-grid-column :field=\"'UnitsInStock'\"\r\n                           :title=\"'Units In Stock'\"\r\n                           :width=\"120\"></kendo-grid-column>\r\n        <kendo-grid-column :field=\"'Discontinued'\"\r\n                           :width=\"120\"></kendo-grid-column>\r\n        <kendo-grid-column :command=\"['edit', 'destroy']\"\r\n                           :title=\"'&nbsp;'\"\r\n                           :width=\"170\"></kendo-grid-column>\r\n    </kendo-grid>\r\n </Layout>\r\n</template>\r\n"],"mappings":";AAKA,SAASA,IAAI,EAAEC,UAAS,QAAS,kCAAkC;AACnE,SAASC,eAAc,QAAS,wCAAwC;AACxE,OAAOC,KAAI,MAAO,oBAAoB;AAEtC,eAAe;EACXC,UAAU,EAAE;IACR,YAAY,EAAEJ,IAAI;IAClB,mBAAmB,EAAEC,UAAU;IAC/B,kBAAkB,EAAEC;EACxB,CAAC;EACFG,IAAI,EAAE,SAAAA,KAAA,EAAY;IACb,OAAO;MACHC,iBAAiB,EAAE;QACfC,SAAS,EAAE;UAAEC,IAAI,EAAE,QAAQ;UAAEC,QAAQ,EAAE;QAAM,CAAC;QAC9CC,WAAW,EAAE;UAAEC,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAK;QAAE,CAAC;QAC/CC,SAAS,EAAE;UAAEL,IAAI,EAAE,QAAQ;UAAEG,UAAU,EAAE;YAAEC,QAAQ,EAAE,IAAI;YAAEE,GAAG,EAAE;UAAE;QAAE,CAAC;QACrEC,YAAY,EAAE;UAAEP,IAAI,EAAE,QAAQ;UAAEG,UAAU,EAAE;YAAEG,GAAG,EAAE,CAAC;YAAEF,QAAQ,EAAE;UAAK;QAAE;MAC3E;IACJ,CAAC;EACL,CAAC;EACDI,OAAO,EAAE;IACLC,YAAY,EAAE,SAAAA,aAASC,CAAC,EAAE;MACtB;MACAC,KAAK,CAAC,qDAAqD,EAAE;QACzDC,IAAI,EAAG,MAAM;QACbC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,QAAQ,EAAE,0BAA0B;UACpC,cAAc,EAAE;QACpB;MACJ,CAAC,EACIC,IAAI,CAAC,UAACC,QAAQ;QAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;MAAA,GAClCF,IAAI,CAAC,UAAAlB,IAAG;QAAA,OAAKmB,QAAQ;MAAA,GACrBE,KAAK,CAAC,UAAUC,KAAK,EAAE;QACpBC,OAAO,CAACC,GAAG,CAAC,yBAAwB,GAAIF,KAAK,CAAC;MAClD,CAAC,CAAC;IACV,CAAC;IACDG,YAAY,EAAE,SAAAA,aAASC,OAAO,EAAEC,SAAS,EAAE;MACvC,IAAIA,SAAQ,KAAM,MAAK,IAAKD,OAAO,CAACE,MAAM,EAAE;QACxC,OAAO;UAAEA,MAAM,EAAE9B,KAAK,CAAC+B,SAAS,CAACH,OAAO,CAACE,MAAM;QAAE,CAAC;MACtD;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}