// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { Configuration } from './base/ConfigurationComponent.js';
import { getDefaultSlots } from '@progress/kendo-vue-common';
import { removeUndefinedProps } from '../utils/main.js';
/**
 * @hidden
 */
var ChartSeriesDefaultsVue2 = {
  name: 'KendoChartSeriesDefaults',
  props: {
    border: {
      type: Object,
      default: function _default() {
        return undefined;
      }
    },
    gap: Number,
    overlay: {
      type: Object,
      default: function _default() {
        return undefined;
      }
    },
    spacing: Number,
    stack: {
      type: [Boolean, String, Object],
      default: function _default() {
        return undefined;
      }
    },
    type: {
      type: String,
      default: function _default() {
        return undefined;
      },
      validator: function validator(value) {
        return ['area', 'bar', 'boxPlot', 'bubble', 'bullet', 'candlestick', 'column', 'donut', 'funnel', 'horizontalWaterfall', 'line', 'ohlc', 'pie', 'polarArea', 'polarLine', 'polarScatter', 'radarArea', 'radarColumn', 'radarLine', 'rangeArea', 'rangeBar', 'rangeColumn', 'scatter', 'scatterLine', 'verticalArea', 'verticalBoxPlot', 'verticalBullet', 'verticalLine', 'verticalRangeArea', 'waterfall'].includes(value);
      }
    },
    visual: {
      type: Function,
      default: undefined
    },
    labels: {
      type: Object,
      default: function _default() {
        return undefined;
      }
    },
    notes: {
      type: Object,
      default: function _default() {
        return undefined;
      }
    },
    tooltip: {
      type: Object,
      default: function _default() {
        return undefined;
      }
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlots = getDefaultSlots(this);
    var config = removeUndefinedProps(this.$props);
    return this.v3 ? h(Configuration, {
      config: config,
      chartKey: 'seriesDefaults'
    }, function () {
      return defaultSlots;
    }) : h(Configuration, {
      props: {
        config: config,
        chartKey: 'seriesDefaults'
      }
    }, [defaultSlots]);
  }
};
/**
 * @hidden
 */
var ChartSeriesDefaults = ChartSeriesDefaultsVue2;
export { ChartSeriesDefaults, ChartSeriesDefaultsVue2 };