{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { Grid, GridColumn } from '@progress/kendo-grid-vue-wrapper';\nimport { KendoDataSource } from '@progress/kendo-datasource-vue-wrapper';\nimport kendo from '@progress/kendo-ui';\nexport default {\n  components: {\n    'kendo-grid': Grid,\n    'kendo-grid-column': GridColumn,\n    'kendo-datasource': KendoDataSource\n  },\n  data: function data() {\n    return {\n      schemaModelFields: {\n        id: {\n          type: 'string',\n          editable: true\n        },\n        GameName: {\n          type: 'string',\n          from: 'attributes.title',\n          editable: true\n        },\n        NumberPlayers: {\n          type: 'string',\n          from: 'attributes.field_players',\n          editable: true\n        },\n        Description: {\n          type: 'string',\n          from: 'attributes.field_description',\n          editable: true\n        },\n        Publisher: {\n          type: 'string',\n          from: 'attributes.field_publisher',\n          editable: true\n        },\n        Rating: {\n          type: 'number',\n          from: 'attributes.field_rating',\n          editable: true\n        },\n        Created: {\n          type: 'string',\n          from: 'attributes.created',\n          editable: false\n        },\n        Modified: {\n          type: 'string',\n          from: 'attributes.changed',\n          editable: false\n        },\n        attributes: {\n          defaultValue: {}\n        },\n        relationships: {\n          defaultValue: {}\n        }\n      },\n      columns: [{\n        field: \"GameName\",\n        title: \"Game Title\",\n        width: 120,\n        hidden: false\n      }, {\n        field: \"Publisher\",\n        title: \"Publisher\",\n        //width: 120, \n        hidden: false\n      }, {\n        field: \"NumberPlayers\",\n        title: \"Number Of Players\",\n        // width: 80, \n        hidden: false\n      }, {\n        field: \"Description\",\n        title: \"Description\",\n        //width: 320, \n        hidden: false\n      }, {\n        field: \"Rating\",\n        title: \"Rating\",\n        //format: \"{0}\",\n        template: \"<span id='chart_#= id#' class='sparkline-chart'></span>\"\n      }, {\n        field: \"Created\",\n        title: \"Created\"\n      }, {\n        field: \"Modified\",\n        title: \"Last Modified\"\n      }, {\n        command: [\"edit\", \"destroy\"],\n        title: \"&nbsp;\",\n        width: \"250px\"\n      }]\n    };\n  },\n  methods: {\n    readgridData: function readgridData(e) {\n      var drupaltoken = localStorage.getItem('drupaltoken');\n      console.log('drupaltoken');\n      console.log(drupaltoken);\n      var user = JSON.parse(localStorage.getItem('user'));\n      if (user && user.token) {\n        console.log('fake usertoken');\n        console.log(user.token);\n      } else {\n        return {};\n      }\n      //e.success({ProductName: \"Chai\"})\n      //// for demo only using fakebackend.js and passing over a bearer token to the service layer as post and bearer\n      fetch('http://dev-gametest.pantheonsite.io/transport-templates-modeling.php?type=read', {\n        mode: 'cors',\n        method: 'get',\n        body: drupaltoken,\n        headers: {\n          'Accept': 'application/vnd.api+json',\n          'Content-type': 'application/vnd.api+json',\n          'Authorization': 'Bearer ' + drupaltoken\n        }\n      }).then(function (response) {\n        return response.text();\n      }).then(function (json) {\n        e.success(json);\n      })\n      //.then((response) => {e.success(response.text())})\n\n      //.then((json) => console.log(json))\n      .catch(function (error) {\n        console.log('Error on Authentication' + error);\n      });\n    },\n    parameterMap: function parameterMap(options, operation) {\n      if (operation !== 'read' && options.models) {\n        return {\n          models: kendo.stringify(options.models)\n        };\n      }\n    },\n    showLoader: function showLoader() {\n      kendo.ui.progress($(\"div[data-role='grid']\"), true);\n    },\n    hideLoader: function hideLoader() {\n      kendo.ui.progress($(\"div[data-role='grid']\"), false);\n    },\n    Refreshtree: function Refreshtree(e) {\n      var projectGrid = $(\"#grid\").data(\"kendoGrid\");\n      projectGrid.dataSource.read();\n      projectGrid.refresh();\n    }\n  }\n};","map":{"version":3,"names":["Grid","GridColumn","KendoDataSource","kendo","components","data","schemaModelFields","id","type","editable","GameName","from","NumberPlayers","Description","Publisher","Rating","Created","Modified","attributes","defaultValue","relationships","columns","field","title","width","hidden","template","command","methods","readgridData","e","drupaltoken","localStorage","getItem","console","log","user","JSON","parse","token","fetch","mode","method","body","headers","then","response","text","json","success","catch","error","parameterMap","options","operation","models","stringify","showLoader","ui","progress","$","hideLoader","Refreshtree","projectGrid","dataSource","read","refresh"],"sources":["/Users/michaelrellaford/Documents/velgame/Starterkit/src/components/widgets/datagrid.vue"],"sourcesContent":["<style lang=\"css\">\r\n@import 'https://kendo.cdn.telerik.com/themes/7.2.0/default/default-ocean-blue.css';\r\n@import 'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css';\r\n</style>\r\n<script>\r\nimport { Grid, GridColumn } from '@progress/kendo-grid-vue-wrapper';\r\nimport { KendoDataSource } from '@progress/kendo-datasource-vue-wrapper';\r\nimport kendo from '@progress/kendo-ui';\r\n\r\nexport default {\r\n    components: {\r\n        'kendo-grid': Grid,\r\n        'kendo-grid-column': GridColumn,\r\n        'kendo-datasource': KendoDataSource\r\n    },\r\n\r\n\r\n   data: function () {\r\n        return {\r\n            schemaModelFields: {\r\n                id: { type: 'string', editable: true },\r\n                GameName: { type: 'string', from: 'attributes.title', editable: true},\r\n                NumberPlayers: { type: 'string', from: 'attributes.field_players', editable: true},\r\n                Description: { type: 'string', from: 'attributes.field_description', editable: true},\r\n                Publisher: { type: 'string', from: 'attributes.field_publisher', editable: true},\r\n                Rating: { type: 'number', from: 'attributes.field_rating', editable: true},\r\n                Created: { type: 'string', from: 'attributes.created', editable: false},\r\n                Modified: { type: 'string', from: 'attributes.changed', editable: false},\r\n                attributes: { defaultValue: {}},\r\n                relationships: { defaultValue: {}},\r\n            },\r\n            columns: [\r\n                    { \r\n                        field: \"GameName\", \r\n                        title: \"Game Title\", \r\n                        width: 120, \r\n                        hidden: false,\r\n                    },\r\n                    { \r\n                        field: \"Publisher\", \r\n                        title: \"Publisher\", \r\n                        //width: 120, \r\n                        hidden: false,\r\n                    }, \r\n                    { \r\n                        field: \"NumberPlayers\", \r\n                        title: \"Number Of Players\", \r\n                        // width: 80, \r\n                        hidden: false,\r\n                    }, \r\n                    { \r\n                        field: \"Description\", \r\n                        title: \"Description\", \r\n                        //width: 320, \r\n                        hidden: false,\r\n                    }, \r\n                    {\r\n                        field: \"Rating\",\r\n                        title: \"Rating\",\r\n                        //format: \"{0}\",\r\n                        template: \"<span id='chart_#= id#' class='sparkline-chart'></span>\",\r\n                    },\r\n                    {\r\n                        field: \"Created\",\r\n                        title: \"Created\"\r\n                    },\r\n                    {\r\n                        field: \"Modified\",\r\n                        title: \"Last Modified\"\r\n                    },\r\n                    { command: [\"edit\", \"destroy\"], title: \"&nbsp;\", width: \"250px\" },\r\n                ]\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        readgridData: function(e) {\r\n\r\n            let drupaltoken = localStorage.getItem('drupaltoken');\r\n            console.log('drupaltoken');\r\n            console.log(drupaltoken);\r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            if (user && user.token) {\r\n                console.log('fake usertoken');\r\n                console.log(user.token);\r\n            } else {\r\n                return {};\r\n            }\r\n            //e.success({ProductName: \"Chai\"})\r\n            //// for demo only using fakebackend.js and passing over a bearer token to the service layer as post and bearer\r\n            fetch('http://dev-gametest.pantheonsite.io/transport-templates-modeling.php?type=read', {\r\n                mode:  'cors', \r\n                method: 'get',\r\n                body: drupaltoken,\r\n                headers: {\r\n                    'Accept': 'application/vnd.api+json',\r\n                    'Content-type': 'application/vnd.api+json',\r\n                    'Authorization': 'Bearer ' + drupaltoken,\r\n                },\r\n              })\r\n\r\n                  .then((response) => response.text())\r\n                  .then((json) => {e.success(json);})\r\n                  //.then((response) => {e.success(response.text())})\r\n                \r\n                //.then((json) => console.log(json))\r\n                .catch(function (error) {\r\n                    console.log('Error on Authentication' + error);\r\n                });\r\n\r\n                \r\n        },\r\n        parameterMap: function(options, operation) {\r\n            if (operation !== 'read' && options.models) {\r\n                return { models: kendo.stringify(options.models) };\r\n            }\r\n        },\r\n\r\n        showLoader: function() {\r\n                kendo.ui.progress($(\"div[data-role='grid']\"), true);\r\n        },\r\n\r\n        hideLoader: function() {\r\n                kendo.ui.progress($(\"div[data-role='grid']\"), false);\r\n        },\r\n\r\n        \r\n        Refreshtree: function(e) {\r\n                var projectGrid = $(\"#grid\").data(\"kendoGrid\");\r\n                projectGrid.dataSource.read();\r\n                projectGrid.refresh();\r\n\r\n        }\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n<Layout>\r\n    <kendo-datasource ref=\"datasource1\"\r\n                        :transport-read=\"readgridData\"\r\n                        :transport-update-url=\"'https://demos.telerik.com/kendo-ui/service/Products/Update'\"\r\n                        :transport-update-data-type=\"'jsonp'\"\r\n                        :transport-destroy-url=\"'https://demos.telerik.com/kendo-ui/service/Products/Destroy'\"\r\n                        :transport-destroy-data-type=\"'jsonp'\"\r\n                        :transport-create-url=\"'https://demos.telerik.com/kendo-ui/service/Products/Create'\"\r\n                        :transport-create-data-type=\"'jsonp'\"\r\n                        :transport-parameter-map=\"parameterMap\"\r\n                        :schema-model-id=\"'ProductID'\"\r\n                        :schema-model-fields=\"schemaModelFields\"\r\n                        :batch='true'\r\n                        :page-size='20'>\r\n    </kendo-datasource>\r\n\r\n    <kendo-grid :height=\"600\"\r\n                :data-source-ref=\"'datasource1'\"\r\n                :pageable=\"true\"\r\n                :sortable=\"true\"\r\n                :navigatable=\"true\"\r\n                :resizable=\"true\"\r\n                :reorderable=\"true\"\r\n                :groupable=\"true\"\r\n                :filterable=\"true\"\r\n                :editable=\"'inline'\"\r\n                toolbar=\"['create','excel', 'pdf', 'search']\"\r\n                @edit=\"onGridEditing\"\r\n                @dataBound=\"onDataBound\"\r\n                :columns=\"columns\"\r\n                >\r\n        \r\n    </kendo-grid>\r\n </Layout>\r\n</template>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}