"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CrosshairContainerVue2 = exports.CrosshairContainer = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var Crosshair_1 = require("./Crosshair");
var AXES = ['categoryAxis', 'valueAxis', 'xAxis', 'yAxis'];
function mapTooltips(options) {
  var map = {};
  for (var idx = 0; idx < AXES.length; idx++) {
    var tooltips = axesCrosshairTooltipOptions(options, AXES[idx]);
    for (var tooltipIdx = 0; tooltipIdx < tooltips.length; tooltipIdx++) {
      var tooltip = tooltips[tooltipIdx];
      map[tooltip.name + tooltip.index] = tooltip;
    }
  }
  return map;
}
function axesCrosshairTooltipOptions(options, name) {
  var result = [];
  if (options[name]) {
    var axes = [].concat(options[name]);
    for (var idx = 0; idx < axes.length; idx++) {
      var tooltip = (axes[idx].crosshair || {}).tooltip;
      if (tooltip && tooltip.visible) {
        result.push({
          index: idx,
          name: name
        });
      }
    }
  }
  return result;
}
/**
 * @hidden
 */
var CrosshairContainerVue2 = {
  name: 'KendoCrosshairContainer',
  props: {
    optionsState: Object
  },
  computed: {
    tooltips: function tooltips() {
      return mapTooltips(this.optionsState);
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var childrenMap = Object.keys(this.tooltips).map(function (key) {
      return (
        // @ts-ignore  function children
        h(Crosshair_1.CrosshairTooltip, {
          index: this.tooltips[key].index,
          attrs: this.v3 ? undefined : {
            index: this.tooltips[key].index,
            name: this.tooltips[key].name
          },
          name: this.tooltips[key].name,
          key: key
        })
      );
    }, this);
    return h("div", [childrenMap]);
  }
};
exports.CrosshairContainerVue2 = CrosshairContainerVue2;
/**
 * @hidden
 */
var CrosshairContainer = CrosshairContainerVue2;
exports.CrosshairContainer = CrosshairContainer;