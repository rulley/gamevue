import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface CollectionConfigurationProps {
    chartKey: string;
    parentStore?: any;
    [x: string]: any;
}
/**
 * @hidden
 */
interface CollectionConfigurationState {
    contextType: any;
    optionsStore: any;
}
/**
 * @hidden
 */
interface CollectionConfigurationData {
    child: any;
}
/**
 * @hidden
 */
export interface CollectionConfigurationMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CollectionConfigurationComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface CollectionConfigurationAll extends CollectionConfigurationMethods, CollectionConfigurationState, CollectionConfigurationData, CollectionConfigurationComputed, Vue2type {
}
/**
 * @hidden
 */
declare const CollectionConfigurationVue2: ComponentOptions<Vue2type, DefaultData<CollectionConfigurationData>, DefaultMethods<CollectionConfigurationAll>, CollectionConfigurationComputed, RecordPropsDefinition<CollectionConfigurationProps>>;
/**
 * @hidden
 */
declare const CollectionConfiguration: DefineComponent<CollectionConfigurationProps, any, CollectionConfigurationData, CollectionConfigurationComputed, CollectionConfigurationMethods, {}, {}, {}, string, CollectionConfigurationProps, CollectionConfigurationProps, {}>;
export { CollectionConfiguration, CollectionConfigurationVue2 };
