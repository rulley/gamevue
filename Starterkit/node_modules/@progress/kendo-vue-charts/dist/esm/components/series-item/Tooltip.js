var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { Configuration } from './../base/ConfigurationComponent.js';
import { getDefaultSlots, getListeners, templateRendering } from '@progress/kendo-vue-common';
import { removeUndefinedProps } from '../../utils/main.js';
/**
 * @hidden
 */
var ChartSeriesItemTooltipVue2 = {
  name: 'KendoChartSeriesItemTooltip',
  props: {
    background: String,
    border: {
      type: Object,
      default: function _default() {
        return undefined;
      }
    },
    color: String,
    font: String,
    format: String,
    padding: {
      type: [Object, Number],
      default: function _default() {
        return undefined;
      }
    },
    render: [String, Function, Object],
    visible: {
      type: Boolean,
      default: true
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlots = getDefaultSlots(this);
    var config = removeUndefinedProps(this.$props);
    var render = templateRendering.call(this, this.$props.render, getListeners.call(this));
    return this.v3 ? h(Configuration, {
      config: __assign(__assign({}, config), {
        render: render
      }),
      chartKey: 'tooltip'
    }, function () {
      return defaultSlots;
    }) : h(Configuration, {
      props: {
        config: __assign(__assign({}, config), {
          render: render
        }),
        chartKey: 'tooltip'
      }
    }, [defaultSlots]);
  }
};
/**
 * @hidden
 */
var ChartSeriesItemTooltip = ChartSeriesItemTooltipVue2;
export { ChartSeriesItemTooltip, ChartSeriesItemTooltipVue2 };