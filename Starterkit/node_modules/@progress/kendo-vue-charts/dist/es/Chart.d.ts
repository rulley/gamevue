import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ChartProps } from './ChartProps';
import { BaseChartState } from './BaseChart';
/**
 * Represents the [Kendo UI for Vue Chart component]({% slug overview_chart_charts %}).
 *
 * ```
 */
/**
 * @hidden
 */
interface ChartState {
    baseChartRef: any;
    baseChart: BaseChartState | null;
}
/**
 * @hidden
 */
interface ChartData {
}
/**
 * @hidden
 */
export interface ChartMethods {
    [key: string]: any;
    chartInstance: () => any;
}
/**
 * @hidden
 */
export interface ChartComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface ChartAll extends ChartMethods, ChartState, ChartData, ChartComputed, Vue2type {
}
/**
 * @hidden
 */
declare const ChartVue2: ComponentOptions<Vue2type, DefaultData<ChartData>, DefaultMethods<ChartAll>, ChartComputed, RecordPropsDefinition<ChartProps>>;
/**
 * @hidden
 */
declare const Chart: DefineComponent<ChartProps, any, ChartData, ChartComputed, ChartMethods, {}, {}, {}, string, ChartProps, ChartProps, {}>;
export { Chart, ChartVue2 };
