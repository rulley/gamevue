import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { Surface } from '@progress/kendo-drawing';
import { InstanceObserver } from '@progress/kendo-charts';
import './defaults';
import { BaseChartPrivateProps } from './BaseChartProps';
import { ChartContextType } from './ChartContext';
/**
 * @hidden
 */
export interface BaseChartState {
    chartInstance: any | null;
    surface: Surface;
    element: HTMLDivElement | null;
    elementRef: any;
    themeStore: any;
    themeUnsubscriber: Function;
    chartObserver: InstanceObserver;
    contextValue: ChartContextType;
    suppressTransitions: boolean;
}
/**
 * @hidden
 */
interface BaseChartData {
    optionsState: any;
    observersState: any;
    childrenObserver: InstanceObserver;
}
/**
 * @hidden
 */
export interface BaseChartMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface BaseChartComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface BaseChartAll extends BaseChartMethods, BaseChartState, BaseChartData, BaseChartComputed, Vue2type {
}
/**
 * @hidden
 */
declare const BaseChartVue2: ComponentOptions<Vue2type, DefaultData<BaseChartData>, DefaultMethods<BaseChartAll>, BaseChartComputed, RecordPropsDefinition<BaseChartPrivateProps>>;
/**
 * @hidden
 */
declare const BaseChart: DefineComponent<BaseChartPrivateProps, any, BaseChartData, BaseChartComputed, BaseChartMethods, {}, {}, {}, string, BaseChartPrivateProps, BaseChartPrivateProps, {}>;
export { BaseChart, BaseChartVue2 };
