{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"k-textbox k-grid-search k-display-flex\"\n};\nvar _hoisted_2 = {\n  class: \"export-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_kendo_datasource = _resolveComponent(\"kendo-datasource\");\n  var _component_k_input = _resolveComponent(\"k-input\");\n  var _component_dropdownlist = _resolveComponent(\"dropdownlist\");\n  var _component_kbutton = _resolveComponent(\"kbutton\");\n  var _component_toolbar = _resolveComponent(\"toolbar\");\n  var _component_kendo_grid = _resolveComponent(\"kendo-grid\");\n  var _component_Layout = _resolveComponent(\"Layout\");\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_kendo_datasource, {\n        ref: \"datasource1\",\n        \"transport-read\": $options.readgridData,\n        \"transport-update\": $options.updategridData,\n        \"transport-destroy\": $options.destroygridData,\n        \"transport-create\": $options.creategridData,\n        \"transport-parameter-map\": $options.parameterMap,\n        \"schema-model-id\": 'id',\n        \"schema-model-fields\": _ctx.schemaModelFields,\n        batch: true,\n        \"page-size\": 20\n      }, null, 8 /* PROPS */, [\"transport-read\", \"transport-update\", \"transport-destroy\", \"transport-create\", \"transport-parameter-map\", \"schema-model-fields\"]), _createVNode(_component_kendo_grid, {\n        ref: \"grid\",\n        height: 600,\n        \"data-source-ref\": 'datasource1',\n        pageable: true,\n        sortable: true,\n        navigatable: true,\n        resizable: true,\n        reorderable: true,\n        groupable: true,\n        filterable: true,\n        editable: 'inline',\n        toolbar: \"['create','excel', 'pdf', 'search']\",\n        onEdit: _ctx.onGridEditing,\n        onDataBound: $options.onDataBound,\n        columns: _ctx.columns\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_toolbar, null, {\n            default: _withCtx(function () {\n              return [_createElementVNode(\"span\", _hoisted_1, [_createVNode(_component_k_input, {\n                style: {\n                  width: '230px'\n                },\n                placeholder: _ctx.gridSearchMessage,\n                value: _ctx.searchWord,\n                onInput: _ctx.onFilter\n              }, null, 8 /* PROPS */, [\"placeholder\", \"value\", \"onInput\"])]), _createElementVNode(\"span\", _hoisted_2, [_createVNode(_component_dropdownlist, {\n                style: {\n                  width: '230px'\n                },\n                class: \"localeDropDownList\",\n                value: _ctx.currentLocale,\n                \"text-field\": 'language',\n                onChange: _ctx.localeChange,\n                \"data-items\": _ctx.locales\n              }, null, 8 /* PROPS */, [\"value\", \"onChange\", \"data-items\"]), _createVNode(_component_kbutton, {\n                title: \"Export to Excel\",\n                \"theme-color\": 'primary',\n                onClick: _ctx.exportExcel\n              }, {\n                default: _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString(_ctx.exportExcelMessage), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"]), _createTextVNode(\"Â  \"), _createVNode(_component_kbutton, {\n                \"theme-color\": 'primary',\n                onClick: _ctx.exportPDF\n              }, {\n                default: _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString(_ctx.exportPdfMessage), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"])])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onEdit\", \"onDataBound\", \"columns\"])];\n    }),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_Layout","default","_withCtx","_createVNode","_component_kendo_datasource","ref","$options","readgridData","updategridData","destroygridData","creategridData","parameterMap","_ctx","schemaModelFields","batch","_component_kendo_grid","height","pageable","sortable","navigatable","resizable","reorderable","groupable","filterable","editable","toolbar","onEdit","onGridEditing","onDataBound","columns","_component_toolbar","_createElementVNode","_hoisted_1","_component_k_input","style","width","placeholder","gridSearchMessage","value","searchWord","onInput","onFilter","_hoisted_2","_component_dropdownlist","currentLocale","onChange","localeChange","locales","_component_kbutton","title","onClick","exportExcel","_createTextVNode","_toDisplayString","exportExcelMessage","_","exportPDF","exportPdfMessage"],"sources":["/Users/michaelrellaford/Documents/velgame/Starterkit/src/components/widgets/datagrid.vue"],"sourcesContent":["<style lang=\"css\">\r\n@import 'https://kendo.cdn.telerik.com/themes/7.2.0/default/default-ocean-blue.css';\r\n@import 'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css';\r\n</style>\r\n<script>\r\nimport { Grid, GridColumn } from '@progress/kendo-grid-vue-wrapper';\r\nimport { KendoDataSource } from '@progress/kendo-datasource-vue-wrapper';\r\nimport kendo from '@progress/kendo-ui';\r\n\r\nexport default {\r\n    components: {\r\n        'kendo-grid': Grid,\r\n        'kendo-datasource': KendoDataSource\r\n    },\r\n\r\n\r\n   data: function () {\r\n        return {\r\n            schemaModelFields: {\r\n                id: { type: 'string', editable: true },\r\n                GameName: { type: 'string', from: 'attributes.title', editable: true},\r\n                NumberPlayers: { type: 'string', from: 'attributes.field_players', editable: true},\r\n                Description: { type: 'string', from: 'attributes.field_description', editable: true},\r\n                Publisher: { type: 'string', from: 'attributes.field_publisher', editable: true},\r\n                Rating: { type: 'number', from: 'attributes.field_rating', editable: true},\r\n                Created: { type: 'string', from: 'attributes.created', editable: false},\r\n                Modified: { type: 'string', from: 'attributes.changed', editable: false},\r\n                attributes: { defaultValue: {}},\r\n                relationships: { defaultValue: {}},\r\n            },\r\n            columns: [\r\n                    { \r\n                        field: \"GameName\", \r\n                        title: \"Game Title\", \r\n                        width: 120, \r\n                        hidden: false,\r\n                    },\r\n                    { \r\n                        field: \"Publisher\", \r\n                        title: \"Publisher\", \r\n                        //width: 120, \r\n                        hidden: false,\r\n                    }, \r\n                    { \r\n                        field: \"NumberPlayers\", \r\n                        title: \"Number Of Players\", \r\n                        // width: 80, \r\n                        hidden: false,\r\n                    }, \r\n                    { \r\n                        field: \"Description\", \r\n                        title: \"Description\", \r\n                        //width: 320, \r\n                        hidden: false,\r\n                    }, \r\n                    {\r\n                        field: \"Rating\",\r\n                        title: \"Rating\",\r\n                        //format: \"{0}\",\r\n                        template: \"<span id='chart_#= id#' class='sparkline-chart'></span>\",\r\n                    },\r\n                    {\r\n                        field: \"Created\",\r\n                        title: \"Created\"\r\n                    },\r\n                    {\r\n                        field: \"Modified\",\r\n                        title: \"Last Modified\"\r\n                    },\r\n                    { command: [\"edit\", \"destroy\"], title: \"&nbsp;\", width: \"250px\" },\r\n                ]\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        /////READ CALLS//////\r\n        readgridData: function(e) {\r\n            //////////Fake drupal oauth user - grab and store in local storage.. local \r\n            /////local storage is not secure for demo purposed only. SPA/decoupled apps should use \r\n            ////// a token handler pattern approach - https://curity.io/resources/learn/the-token-handler-pattern/?utm_source=thenewstack&utm_medium=website&utm_content=inline-mention&utm_campaign=platform\r\n            let drupaltoken = localStorage.getItem('drupaltoken');\r\n            //console.log('drupaltoken');\r\n            //console.log(drupaltoken);\r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            if (user && user.token) {\r\n                console.log('fake usertoken');\r\n                console.log(user.token);\r\n            } else {\r\n                return {};\r\n            }\r\n            //// for demo only using fakebackend.js and passing over a bearer token to the service layer as post and bearer\r\n            //// using fetch here for quick api support/calls - https://blog.logrocket.com/axios-vs-fetch-best-http-requests/\r\n            fetch('https://dev-gametest.pantheonsite.io/clients/transport-templates-modeling.php?type=read', {\r\n                mode:  'cors', \r\n                method: 'post',\r\n                body: 'token=' + drupaltoken,\r\n                headers: {\r\n                    'Accept': 'application/vnd.api+json',\r\n                    'Content-type': 'application/vnd.api+json',\r\n                    'Authorization': 'Bearer ' + drupaltoken,\r\n                },\r\n              })\r\n                .then((response) => response.text())\r\n                .then((json) => {e.success(json);})\r\n                //.then((response) => {e.success(response.text())})\r\n                //.then((json) => console.log(json))\r\n                .catch(function (error) {\r\n                    console.log('Error on Authentication' + error);\r\n                });\r\n        },\r\n\r\n        /////UPDATE CALLS//////\r\n        updategridData: function(e) {\r\n            //////////Fake drupal oauth user - grab and store in local storage.. local \r\n            /////local storage is not secure for demo purposed only. SPA/decoupled apps should use \r\n            ////// a token handler pattern approach - https://curity.io/resources/learn/the-token-handler-pattern/?utm_source=thenewstack&utm_medium=website&utm_content=inline-mention&utm_campaign=platform\r\n            let drupaltoken = localStorage.getItem('drupaltoken');\r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            //// for demo only using fakebackend.js and passing over a bearer token to the service layer as post and bearer\r\n            //// using fetch here for quick api support/calls - https://blog.logrocket.com/axios-vs-fetch-best-http-requests/\r\n            fetch('https://dev-gametest.pantheonsite.io/clients/transport-templates-modeling.php?type=update', {\r\n                mode:  'cors', \r\n                method: 'post',\r\n                body: 'token=' + drupaltoken +',models=' + e.data.models,\r\n                headers: {\r\n                    'Accept': 'application/vnd.api+json',\r\n                    'Content-type': 'application/vnd.api+json',\r\n                    'Authorization': 'Bearer ' + drupaltoken,\r\n                },\r\n              })\r\n                .then((response) => response.text())\r\n                .then((json) => {e.success(json);})\r\n                //.then((response) => {e.success(response.text())})\r\n                //.then((json) => console.log(json))\r\n                .catch(function (error) {\r\n                    console.log('Error on Authentication' + error);\r\n                });\r\n        },\r\n\r\n        /////CREATE CALLS//////\r\n        creategridData: function(e) {\r\n            //////////Fake drupal oauth user - grab and store in local storage.. local \r\n            /////local storage is not secure for demo purposed only. SPA/decoupled apps should use \r\n            ////// a token handler pattern approach - https://curity.io/resources/learn/the-token-handler-pattern/?utm_source=thenewstack&utm_medium=website&utm_content=inline-mention&utm_campaign=platform\r\n            let drupaltoken = localStorage.getItem('drupaltoken');\r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            //// for demo only using fakebackend.js and passing over a bearer token to the service layer as post and bearer\r\n            //// using fetch here for quick api support/calls - https://blog.logrocket.com/axios-vs-fetch-best-http-requests/\r\n            fetch('https://dev-gametest.pantheonsite.io/clients/transport-templates-modeling.php?type=create', {\r\n                mode:  'cors', \r\n                method: 'post',\r\n                body: 'token=' + drupaltoken +',models=' + e.data.models,\r\n                headers: {\r\n                    //'Accept': 'application/vnd.api+json',\r\n                    //'Content-type': 'application/vnd.api+json',\r\n                    'Authorization': 'Bearer ' + drupaltoken,\r\n                },\r\n              })\r\n                .then((response) => response.text())\r\n                .then((json) => {e.success(json);})\r\n                //.then((response) => {e.success(response.text())})\r\n                //.then((json) => console.log(json))\r\n                .catch(function (error) {\r\n                    console.log('Error on Authentication' + error);\r\n                });\r\n        },\r\n\r\n        /////DELETE CALLS//////\r\n        destroygridData: function(e) {\r\n            //////////Fake drupal oauth user - grab and store in local storage.. local \r\n            /////local storage is not secure for demo purposed only. SPA/decoupled apps should use \r\n            ////// a token handler pattern approach - https://curity.io/resources/learn/the-token-handler-pattern/?utm_source=thenewstack&utm_medium=website&utm_content=inline-mention&utm_campaign=platform\r\n            let drupaltoken = localStorage.getItem('drupaltoken');\r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            //// for demo only using fakebackend.js and passing over a bearer token to the service layer as post and bearer\r\n            //// using fetch here for quick api support/calls - https://blog.logrocket.com/axios-vs-fetch-best-http-requests/\r\n            fetch('https://dev-gametest.pantheonsite.io/clients/transport-templates-modeling.php?type=delete', {\r\n                mode:  'cors', \r\n                method: 'post',\r\n                body: 'token=' + drupaltoken +',models=' + e.data.models,\r\n                headers: {\r\n                    'Accept': 'application/vnd.api+json',\r\n                    'Content-type': 'application/vnd.api+json',\r\n                    'Authorization': 'Bearer ' + drupaltoken,\r\n                },\r\n              })\r\n                .then((response) => response.text())\r\n                .then((json) => {e.success(json);})\r\n                //.then((response) => {e.success(response.text())})\r\n                //.then((json) => console.log(json))\r\n                .catch(function (error) {\r\n                    console.log('Error on Authentication' + error);\r\n                });\r\n        },\r\n\r\n        parameterMap: function(options, operation) {\r\n            if (operation !== 'read' && options.models) {\r\n                return { models: kendo.stringify(options.models) };\r\n            }\r\n        },\r\n\r\n        onDataBound: function(e) {\r\n               \r\n        },\r\n\r\n        showLoader: function() {\r\n              \r\n        },\r\n\r\n        hideLoader: function() {\r\n              \r\n        },\r\n\r\n        Refreshtree: function(e) {\r\n               \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n<Layout>\r\n    <kendo-datasource ref=\"datasource1\"\r\n                :transport-read=\"readgridData\"\r\n                :transport-update=\"updategridData\"\r\n                :transport-destroy=\"destroygridData\"\r\n                :transport-create=\"creategridData\"\r\n                :transport-parameter-map=\"parameterMap\"\r\n                :schema-model-id=\"'id'\"\r\n                :schema-model-fields=\"schemaModelFields\"\r\n                :batch='true'\r\n                :page-size='20'>\r\n    </kendo-datasource>\r\n\r\n    <kendo-grid ref=\"grid\"\r\n                :height=\"600\"\r\n                :data-source-ref=\"'datasource1'\"\r\n                :pageable=\"true\"\r\n                :sortable=\"true\"\r\n                :navigatable=\"true\"\r\n                :resizable=\"true\"\r\n                :reorderable=\"true\"\r\n                :groupable=\"true\"\r\n                :filterable=\"true\"\r\n                :editable=\"'inline'\"\r\n                toolbar=\"['create','excel', 'pdf', 'search']\"\r\n                @edit=\"onGridEditing\"\r\n                @dataBound=\"onDataBound\"\r\n                :columns=\"columns\"\r\n                >\r\n                <toolbar>\r\n                <span class=\"k-textbox k-grid-search k-display-flex\">\r\n                    <k-input\r\n                    :style=\"{ width: '230px' }\"\r\n                    :placeholder=\"gridSearchMessage\"\r\n                    :value=\"searchWord\"\r\n                    @input=\"onFilter\"\r\n                    ></k-input>\r\n                </span>\r\n                <span class=\"export-buttons\">\r\n                    <dropdownlist\r\n                    :style=\"{ width: '230px' }\"\r\n                    class=\"localeDropDownList\"\r\n                    :value=\"currentLocale\"\r\n                    :text-field=\"'language'\"\r\n                    @change=\"localeChange\"\r\n                    :data-items=\"locales\"\r\n                    >\r\n                    </dropdownlist>\r\n                    <kbutton\r\n                    title=\"Export to Excel\"\r\n                    :theme-color=\"'primary'\"\r\n                    @click=\"exportExcel\"\r\n                    >\r\n                    {{ exportExcelMessage }}</kbutton\r\n                    >&nbsp;\r\n                    <kbutton :theme-color=\"'primary'\" @click=\"exportPDF\">\r\n                    {{ exportPdfMessage }}\r\n                    </kbutton>\r\n                </span>\r\n        </toolbar>\r\n    </kendo-grid>\r\n </Layout>\r\n</template>\r\n"],"mappings":";;EA2PsBA,KAAK,EAAC;AAAwC;;EAQ9CA,KAAK,EAAC;AAAgB;;;;;;;;;uBAtC5CC,YAAA,CA6DUC,iBAAA;IA1RVC,OAAA,EAAAC,QAAA,CA8NI;MAAA,OAUmB,CAVnBC,YAAA,CAUmBC,2BAAA;QAVDC,GAAG,EAAC,aAAa;QACtB,gBAAc,EAAEC,QAAA,CAAAC,YAAY;QAC5B,kBAAgB,EAAED,QAAA,CAAAE,cAAc;QAChC,mBAAiB,EAAEF,QAAA,CAAAG,eAAe;QAClC,kBAAgB,EAAEH,QAAA,CAAAI,cAAc;QAChC,yBAAuB,EAAEJ,QAAA,CAAAK,YAAY;QACrC,iBAAe,EAAE,IAAI;QACrB,qBAAmB,EAAEC,IAAA,CAAAC,iBAAiB;QACtCC,KAAK,EAAE,IAAI;QACX,WAAS,EAAE;kKAGxBX,YAAA,CA+CaY,qBAAA;QA/CDV,GAAG,EAAC,MAAM;QACTW,MAAM,EAAE,GAAG;QACX,iBAAe,EAAE,aAAa;QAC9BC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,IAAI;QACdC,WAAW,EAAE,IAAI;QACjBC,SAAS,EAAE,IAAI;QACfC,WAAW,EAAE,IAAI;QACjBC,SAAS,EAAE,IAAI;QACfC,UAAU,EAAE,IAAI;QAChBC,QAAQ,EAAE,QAAQ;QACnBC,OAAO,EAAC,qCAAqC;QAC5CC,MAAI,EAAEd,IAAA,CAAAe,aAAa;QACnBC,WAAS,EAAEtB,QAAA,CAAAsB,WAAW;QACtBC,OAAO,EAAEjB,IAAA,CAAAiB;;QAxP1B5B,OAAA,EAAAC,QAAA,CA0PgB;UAAA,OA8BE,CA9BFC,YAAA,CA8BE2B,kBAAA;YAxRlB7B,OAAA,EAAAC,QAAA,CA2PgB;cAAA,OAOO,CAPP6B,mBAAA,CAOO,QAPPC,UAOO,GANH7B,YAAA,CAKW8B,kBAAA;gBAJVC,KAAK,EAAE;kBAAAC,KAAA;gBAAA,CAAkB;gBACzBC,WAAW,EAAExB,IAAA,CAAAyB,iBAAiB;gBAC9BC,KAAK,EAAE1B,IAAA,CAAA2B,UAAU;gBACjBC,OAAK,EAAE5B,IAAA,CAAA6B;8EAGZV,mBAAA,CAoBO,QApBPW,UAoBO,GAnBHvC,YAAA,CAQewC,uBAAA;gBAPdT,KAAK,EAAE;kBAAAC,KAAA;gBAAA,CAAkB;gBAC1BrC,KAAK,EAAC,oBAAoB;gBACzBwC,KAAK,EAAE1B,IAAA,CAAAgC,aAAa;gBACpB,YAAU,EAAE,UAAU;gBACtBC,QAAM,EAAEjC,IAAA,CAAAkC,YAAY;gBACpB,YAAU,EAAElC,IAAA,CAAAmC;4EAGb5C,YAAA,CAKkC6C,kBAAA;gBAJlCC,KAAK,EAAC,iBAAiB;gBACtB,aAAW,EAAE,SAAS;gBACtBC,OAAK,EAAEtC,IAAA,CAAAuC;;gBAhR5BlD,OAAA,EAAAC,QAAA,CAkRoB;kBAAA,OAAwB,CAlR5CkD,gBAAA,CAAAC,gBAAA,CAkRuBzC,IAAA,CAAA0C,kBAAkB,iB;;gBAlRzCC,CAAA;8CAAAH,gBAAA,CAmRqB,IACD,GAAAjD,YAAA,CAEU6C,kBAAA;gBAFA,aAAW,EAAE,SAAS;gBAAGE,OAAK,EAAEtC,IAAA,CAAA4C;;gBApR9DvD,OAAA,EAAAC,QAAA,CAqRoB;kBAAA,OAAsB,CArR1CkD,gBAAA,CAAAC,gBAAA,CAqRuBzC,IAAA,CAAA6C,gBAAgB,iB;;gBArRvCF,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}