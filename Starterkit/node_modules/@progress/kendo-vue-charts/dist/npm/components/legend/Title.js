"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChartLegendTitleVue2 = exports.ChartLegendTitle = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var ConfigurationComponent_1 = require("./../base/ConfigurationComponent");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var main_1 = require("../../utils/main");
/**
 * @hidden
 */
var ChartLegendTitleVue2 = {
  name: 'KendoChartLegendTitle',
  props: {
    align: {
      type: String,
      default: function _default() {
        return undefined;
      },
      validator: function validator(value) {
        return ['center', 'left', 'right'].includes(value);
      }
    },
    background: String,
    border: {
      type: Object,
      default: function _default() {
        return undefined;
      }
    },
    color: String,
    font: String,
    margin: {
      type: [Object, Number],
      default: function _default() {
        return undefined;
      }
    },
    padding: {
      type: [Object, Number],
      default: function _default() {
        return undefined;
      }
    },
    position: {
      type: String,
      default: function _default() {
        return undefined;
      },
      validator: function validator(value) {
        return ['top', 'bottom'].includes(value);
      }
    },
    text: String,
    visible: {
      type: Boolean,
      default: undefined
    },
    visual: {
      type: Function,
      default: undefined
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlots = (0, kendo_vue_common_1.getDefaultSlots)(this);
    var config = (0, main_1.removeUndefinedProps)(this.$props);
    return this.v3 ? h(ConfigurationComponent_1.Configuration, {
      config: config,
      chartKey: 'title'
    }, function () {
      return defaultSlots;
    }) : h(ConfigurationComponent_1.Configuration, {
      props: {
        config: config,
        chartKey: 'title'
      }
    }, [defaultSlots]);
  }
};
exports.ChartLegendTitleVue2 = ChartLegendTitleVue2;
/**
 * @hidden
 */
var ChartLegendTitle = ChartLegendTitleVue2;
exports.ChartLegendTitle = ChartLegendTitle;