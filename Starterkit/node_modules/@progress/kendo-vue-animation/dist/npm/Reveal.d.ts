import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => RevealData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { AnimationInterface, AnimationEventArguments } from './AnimationInterface';
/**
 * Specifies the direction of the Reveal Animation ([see example]({% slug direction_animation %}#toc-reveal)).
 *
 * The supported directions are:
 * * (Default) `vertical`&mdash;Reveals the height of the content.
 * * `horizontal`&mdash;Reveals the width of the content.
 */
export declare type RevealDirection = 'horizontal' | 'vertical';
/**
 * Represent the props of the [KendoVue Reveal Animation component]({% slug animationtypes_animation %}#toc-rveal).
 *
 * @example
 * ```html-preview
 *
 * ```
 */
export interface RevealProps extends AnimationInterface {
    /**
     * After the element reaches its exit state, it is no longer available in the DOM.
     *  If a DOM operation is required, access it trough the `childFactory` function.
     */
    childFactory?: any;
    /**
     * Specifies the CSS class names which are set to the Animation.
     */
    className?: string;
    /**
     * Specifies the direction of the Reveal Animation. Defaults to `vertical`.
     */
    direction?: string;
    /**
     * Specifies the node type of the parent Animation. Defaults to `div`.
     */
    component?: string;
    /**
     * Specifies the tag.
     */
    tag?: string;
    /**
     * Specifies the id of the Animation.
     */
    id?: string;
    /**
     * Specifies the style of the parent Animation.
     */
    style?: any;
}
/**
 * @hidden
 */
export interface RevealData {
    maxHeight?: number;
    maxWidth?: number;
}
/**
 * @hidden
 */
export interface RevealComputed {
    [key: string]: any;
    animationEnteringStyle?: any;
}
/**
 * @hidden
 */
export interface RevealMethods extends Vue2type {
    [key: string]: any;
    componentWillEnter: (event: AnimationEventArguments) => void;
    componentIsEntering: (event: AnimationEventArguments) => void;
    componentWillExit: (event: AnimationEventArguments) => void;
    updateContainerDimensions: (node: HTMLElement, done: () => any) => void;
}
/**
 * @hidden
 */
export interface RevealAll extends RevealMethods, RevealData, RevealComputed {
}
/**
 * @hidden
 */
declare let RevealVue2: ComponentOptions<Vue2type, DefaultData<RevealData>, DefaultMethods<RevealAll>, {}, RecordPropsDefinition<RevealProps>>;
/**
 * @hidden
 */
declare const Reveal: DefineComponent<RevealProps, any, RevealData, RevealComputed, RevealMethods, {}, {}, {}, string, RevealProps, RevealProps, {}>;
export { Reveal, RevealVue2 };
