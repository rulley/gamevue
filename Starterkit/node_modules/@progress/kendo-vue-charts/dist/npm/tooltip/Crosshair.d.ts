import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { Align, Offset } from '@progress/kendo-vue-popup';
/**
 * @hidden
 */
export interface CrosshairTooltipProps {
    index: number;
    name: string;
}
/**
 * @hidden
 */
export interface CrosshairTooltipData {
    className?: string | undefined;
    popupShown: boolean;
    popupAlign?: Align;
    popupOffset?: Offset;
    popupStyles?: any;
    popupContend?: any;
}
/**
 * @hidden
 */
export interface CrosshairTooltipState {
    chartObserver: any;
}
/**
 * @hidden
 */
export interface CrosshairTooltipMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CrosshairTooltipComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CrosshairTooltipAll extends CrosshairTooltipMethods, CrosshairTooltipState, CrosshairTooltipData, CrosshairTooltipComputed, Vue2type {
}
/**
 * @hidden
 */
declare const CrosshairTooltipVue2: ComponentOptions<Vue2type, DefaultData<CrosshairTooltipData>, DefaultMethods<CrosshairTooltipAll>, CrosshairTooltipComputed, RecordPropsDefinition<CrosshairTooltipProps>>;
/**
 * @hidden
 */
declare const CrosshairTooltip: DefineComponent<CrosshairTooltipProps, any, CrosshairTooltipData, CrosshairTooltipComputed, CrosshairTooltipMethods, {}, {}, {}, string, CrosshairTooltipProps, CrosshairTooltipProps, {}>;
export { CrosshairTooltip, CrosshairTooltipVue2 };
